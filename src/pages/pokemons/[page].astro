---
import type { GetStaticPaths } from 'astro'
import PokemonCard from '@components/pokemons/PokemonCard.astro'
import type { PokemonListResponse } from '@interfaces/pokemon-list.response'
import LayoutMain from '@layouts/LayoutMain.astro'
import Title from '@components/shared/Title.astro'

export const getStaticPaths = (async ({ paginate }) => {
  const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151')
  const { results } = (await response.json()) as PokemonListResponse

  return paginate(results, { pageSize: 20 })
}) satisfies GetStaticPaths

const { page } = Astro.props
---

<LayoutMain title="Pokemon API - Home">
  <Title>Listado de Páginado</Title>
  <section
    aria-label="Listado de Pokemon"
    class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-4 mt-5"
  >
    {
      page.data.map((pokemon) => (
        <PokemonCard name={pokemon.name} url={pokemon.url} />
      ))
    }
  </section>
  <section class="flex px-10 my-5 gap-2 items-center justify-between">
    <div>
      {
        page.url.prev === undefined ? (
          <a href={page.url.prev} class="btn disabled">
            Anterior
          </a>
        ) : (
          <a href={page.url.prev} class="btn">
            Anterior
          </a>
        )
      }

      <a
        href={page.url.next}
        class:list={[
          'btn',
          {
            disabled: !page.url.next
          }
        ]}>Siguiente</a
      >
    </div>
    <span>Página {page.currentPage} de {page.lastPage}</span>
  </section>
</LayoutMain>

<style>
  .btn {
    @apply bg-blue-500 p-2 text-white rounded-md;
  }

  .disabled {
    @apply bg-gray-600 text-gray-400 select-none;
  }
</style>
